const express = require('express');
const bodyParser = require('body-parser');
const sqlite3 = require('sqlite3').verbose();
const path = require('path');

const app = express();
const db = new sqlite3.Database(':memory:');

// Configurer le body-parser pour traiter les données JSON
app.use(bodyParser.json());

// Servir les fichiers statiques (HTML, CSS, JS)
app.use(express.static(path.join(__dirname, 'public')));

// Créer une table pour stocker les informations du formulaire
db.serialize(() => {
    db.run("CREATE TABLE users (id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT, email TEXT, message TEXT)");
});

// Route pour gérer la soumission du formulaire
app.post('/submit', (req, res) => {
    const { name, email, message } = req.body;

    const stmt = db.prepare("INSERT INTO users (name, email, message) VALUES (?, ?, ?)");
    stmt.run(name, email, message, (err) => {
        if (err) {
            res.status(500).send("Erreur lors de l'enregistrement des données.");
        } else {
            res.status(200).send("Données enregistrées avec succès.");
        }
    });
    stmt.finalize();
});

// Démarrer le serveur
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
    console.log(`Serveur démarré sur le port ${PORT}`);
});
